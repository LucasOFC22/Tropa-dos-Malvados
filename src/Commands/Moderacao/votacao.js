const Discord = require("discord.js")
const config = require('../../config/config.json');
const emoji = require('../../config/emoji.json');

module.exports = {
    name: "votacao",
    description: "[ üõ†Ô∏è ]Crie uma vota√ß√£o",
    type: Discord.ApplicationCommandType.ChatInput,
    options: [
        {
            name: "canal",
            type: Discord.ApplicationCommandOptionType.Channel,
            description: "Qual canal vai ser a vota√ß√£o?",
            required: true
            
        },
        {
            name: "op√ß√£o1",
            type: Discord.ApplicationCommandOptionType.String,
            description: "Qual a primeira op√ß√£o?",
            required: true
                
        },
        {
            name: "op√ß√£o2",
            type: Discord.ApplicationCommandOptionType.String,
            description: "Qual a segunda op√ß√£o?",
            required: true
                    
        },
        
    ],


    run: async (client, interaction, args) => {

        if(!interaction.member.permissions.has(Discord.PermissionsBitField.Flags.Administrator)) return interaction.reply(`${emoji.x_} | Voce n√£o tem perm`) 


        let canal = interaction.options.getChannel("canal");
        let op1  = interaction.options.getString("op√ß√£o1");
        let op2  = interaction.options.getString("op√ß√£o2");
        let cc = client.channels.cache.get(canal.id)

        let embed = new Discord.EmbedBuilder()
            .setTitle("Vota√ß√£o")
            .setDescription("Vote na op√ß√£o que deseja!")
            .addFields({ name: "1Ô∏è‚É£ =", value: `${op1}`, inline: true})
            .addFields({ name: "2Ô∏è‚É£ = ", value: `${op2}`, inline: true})
            .setColor(config.embed)
   
            cc.send({content: `Vota√ß√£o iniciada por: ${interaction.user}`,embeds: [embed]}).then((msg) =>{
            msg.react("1Ô∏è‚É£")
            msg.react("2Ô∏è‚É£")
        }) 

    await interaction.reply({content: "Vota√ß√£o inciada!"})

    }
}